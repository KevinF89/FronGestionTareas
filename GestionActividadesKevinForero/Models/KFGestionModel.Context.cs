//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GestionActividadesKevinForero.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ZKFGestionActividadesEntities : DbContext
    {
        public ZKFGestionActividadesEntities()
            : base("name=ZKFGestionActividadesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int SP_CrearTarea(string nombre, string estado, Nullable<System.DateTime> fechaCreacion, Nullable<System.DateTime> fechaproyect, Nullable<int> idEmpleado, string descripcion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var fechaproyectParameter = fechaproyect.HasValue ?
                new ObjectParameter("Fechaproyect", fechaproyect) :
                new ObjectParameter("Fechaproyect", typeof(System.DateTime));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CrearTarea", nombreParameter, estadoParameter, fechaCreacionParameter, fechaproyectParameter, idEmpleadoParameter, descripcionParameter);
        }
    
        public virtual int SP_EditarTarea(Nullable<int> idActividad, string nombre, string estado, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaCierre, Nullable<int> idEmpleado, string descripcion)
        {
            var idActividadParameter = idActividad.HasValue ?
                new ObjectParameter("IdActividad", idActividad) :
                new ObjectParameter("IdActividad", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("FechaCierre", fechaCierre) :
                new ObjectParameter("FechaCierre", typeof(System.DateTime));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EditarTarea", idActividadParameter, nombreParameter, estadoParameter, fechaInicioParameter, fechaCierreParameter, idEmpleadoParameter, descripcionParameter);
        }
    
        public virtual int SP_EliminarTarea(Nullable<int> idActividad)
        {
            var idActividadParameter = idActividad.HasValue ?
                new ObjectParameter("IdActividad", idActividad) :
                new ObjectParameter("IdActividad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EliminarTarea", idActividadParameter);
        }
    
        public virtual ObjectResult<SP_ListaEmpleados_Result> SP_ListaEmpleados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListaEmpleados_Result>("SP_ListaEmpleados");
        }
    
        public virtual ObjectResult<SP_ConsultarTareas_Result> SP_ConsultarTareas(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultarTareas_Result>("SP_ConsultarTareas", idEmpleadoParameter);
        }
    }
}
